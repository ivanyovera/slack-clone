{"version":3,"sources":["components/ChatInput.js","components/ChatMessage.js","firebase.js","components/Chat.js","components/Login.js","components/Header.js","data/SidebarData.js","components/Sidebar.js","App.js","reportWebVitals.js","index.js"],"names":["ChatInput","sendMessage","useState","input","setInput","Container","InputContainer","onChange","e","target","value","type","placeholder","SendButton","onClick","preventDefault","styled","div","button","Send","SendIcon","ChatMessage","text","name","image","timestamp","UserAvatar","src","alt","MessageContent","Name","Date","toDate","toUTCString","Text","span","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","Chat","user","channelId","useParams","channel","setChannel","messages","setMessages","useEffect","collection","doc","onSnapshot","snapshot","data","orderBy","docs","map","Header","Channel","ChannelName","ChannelInfo","ChannelDetails","Info","MessageContainer","length","index","userImage","payload","Timestamp","now","photo","add","InfoOutlinedIcon","Login","props","Content","SlackImg","SignInButton","signInWithPopup","then","result","newUser","displayName","photoURL","localStorage","setItem","JSON","stringify","setUser","catch","error","alert","message","img","signOut","Main","SearchContainer","Search","UserContainer","UserImage","sidebarItemsData","icon","Sidebar","history","useHistory","WorkspaceContainer","NewMessage","MainChannels","item","MainChannelItem","ChannelsContainer","NewChannelContainer","promptName","prompt","ChannelsList","rooms","id","console","log","push","App","setRooms","parse","getItem","className","removeItem","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1aea84c6.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport SendIcon from '@material-ui/icons/Send';\n\nfunction ChatInput({ sendMessage }) {\n\n    const [input, setInput] = useState(\"\");\n\n\n    const send = (e) => {\n        e.preventDefault();\n        if(!input) return;\n        sendMessage(input)\n        setInput(\"\")\n    }\n\n\n    return (\n        <Container>\n            <InputContainer>\n                <form>\n                    <input \n                        onChange={(e)=>setInput(e.target.value)}\n                        type=\"text\" \n                        value={input}\n                        placeholder=\"Message here...\" />\n                    <SendButton \n                        type=\"submit\"\n                        onClick={send}>\n                        <Send />\n                    </SendButton>\n                </form>\n            </InputContainer>\n        </Container>\n    )\n}\n\nexport default ChatInput\n\nconst Container = styled.div`\n    padding-left: 20px;\n    padding-right: 20px;\n    padding-bottom: 24px;\n`\n\nconst InputContainer = styled.div`\n    border: 1px solid #8D8D8E;\n    border-radius: 4px;\n\n    form {\n        display: flex;\n        height: 42px;\n        align-items: center;\n        padding-left: 10px;\n        input {\n            flex: 1;\n            border: none;\n            font-size: 13px;\n        }\n\n        input:focus {\n            outline: none;\n        }\n    }\n\n`\n\nconst SendButton = styled.button`\n    background: #007a5a;\n    border-radius: 2px;\n    width: 32px;\n    height: 32px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin-right: 5px;\n    cursor: pointer;\n    border: none;\n\n    .MuiSvgIcon-root {\n        width: 18px;\n    }\n\n    :hover {\n        background: #148567\n    }\n\n`\n\nconst Send = styled(SendIcon)`\n    color: #D9D9D9;\n`\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nfunction ChatMessage({ text, name, image, timestamp }) {\n  return (\n    <Container>\n      <UserAvatar>\n        <img src={image} alt=\"useravatar\" />\n      </UserAvatar>\n      <MessageContent>\n        <Name>\n          {name}\n          <span>{new Date(timestamp.toDate()).toUTCString()}</span>\n        </Name>\n        <Text>{text}</Text>\n      </MessageContent>\n    </Container>\n  );\n}\n\nexport default ChatMessage;\n\nconst Container = styled.div`\n  padding: 8px 20px;\n  display: flex;\n  align-items: center;\n`;\n\nconst UserAvatar = styled.div`\n  width: 36px;\n  height: 36px;\n  border-radius: 2px;\n  overflow: hidden;\n  margin-right: 8px;\n\n  img {\n    width: 100%;\n  }\n`;\n\nconst MessageContent = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Name = styled.span`\n  font-weight: 900;\n  font-size: 15px;\n  line-height: 1.4;\n  span {\n    margin-left: 8px;\n    font-weight: 400;\n    color: rgb(97, 96, 97);\n    font-size: 13px;\n  }\n`;\n\nconst Text = styled.span``;\n","import firebase from \"firebase\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDGlaSsBTFO94AtIewxnb0DT8JZnRsdEAo\",\n  authDomain: \"slack-clone-dafe8.firebaseapp.com\",\n  projectId: \"slack-clone-dafe8\",\n  storageBucket: \"slack-clone-dafe8.appspot.com\",\n  messagingSenderId: \"656707145768\",\n  appId: \"1:656707145768:web:4629dc4777e26f8dcc651d\",\n  measurementId: \"G-E6Z5DFHEJ2\",\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth();\nconst provider = new firebase.auth.GoogleAuthProvider();\n\nexport { auth, provider };\nexport default db;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport InfoOutlinedIcon from \"@material-ui/icons/InfoOutlined\";\nimport ChatInput from \"./ChatInput\";\nimport ChatMessage from \"./ChatMessage\";\nimport db from \"../firebase\";\nimport { useParams } from \"react-router-dom\";\nimport firebase from \"firebase\";\n\nfunction Chat({ user }) {\n  let { channelId } = useParams();\n  const [channel, setChannel] = useState();\n  const [messages, setMessages] = useState([]);\n\n  const getMessages = () => {\n    db.collection(\"rooms\")\n      .doc(channelId)\n      .collection(\"messages\")\n      .orderBy(\"timestamp\", \"asc\")\n      .onSnapshot((snapshot) => {\n        let messages = snapshot.docs.map((doc) => doc.data());\n        setMessages(messages);\n      });\n  };\n\n  const sendMessage = (text) => {\n    if (channelId) {\n      let payload = {\n        text: text,\n        timestamp: firebase.firestore.Timestamp.now(),\n        user: user.name,\n        userImage: user.photo,\n      };\n      db.collection(\"rooms\").doc(channelId).collection(\"messages\").add(payload);\n    }\n  };\n\n  const getChannel = () => {\n    db.collection(\"rooms\")\n      .doc(channelId)\n      .onSnapshot((snapshot) => {\n        setChannel(snapshot.data());\n      });\n  };\n\n  useEffect(() => {\n    getChannel();\n    getMessages();\n    // eslint-disable-next-line\n  }, [channelId]);\n\n  return (\n    <Container>\n      <Header>\n        <Channel>\n          <ChannelName># {channel && channel.name}</ChannelName>\n          <ChannelInfo>\n            Company-wide announcements and work-based matters\n          </ChannelInfo>\n        </Channel>\n        <ChannelDetails>\n          <div>Details</div>\n          <Info />\n        </ChannelDetails>\n      </Header>\n      <MessageContainer>\n        {messages.length > 0 &&\n          messages.map((data, index) => (\n            <ChatMessage\n              text={data.text}\n              name={data.user}\n              image={data.userImage}\n              timestamp={data.timestamp}\n            />\n          ))}\n      </MessageContainer>\n      <ChatInput sendMessage={sendMessage} />\n    </Container>\n  );\n}\n\nexport default Chat;\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-rows: 64px auto min-content;\n  min-height: 0;\n`;\n\nconst Channel = styled.div``;\n\nconst ChannelDetails = styled.div`\n  display: flex;\n  align-items: center;\n  color: #606060;\n`;\n\nconst ChannelName = styled.div`\n  font-weight: 700;\n`;\n\nconst ChannelInfo = styled.div`\n  font-weight: 400;\n  color: #606060;\n  font-size: 13px;\n  margin-top: 8px;\n`;\n\nconst Info = styled(InfoOutlinedIcon)`\n  margin-left: 10px;\n`;\n\nconst Header = styled.div`\n  padding-left: 20px;\n  padding-right: 20px;\n  display: flex;\n  align-items: center;\n  border-bottom: 1px solid rgba(83, 39, 83, 0.13);\n  justify-content: space-between;\n`;\n\nconst MessageContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  overflow-y: scroll;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { auth, provider } from \"../firebase\";\n// import firebase from \"firebase/app\";\n// import \"firebase/auth\";\n// import { provider } from \"firebase\";\n\nfunction Login(props) {\n  const signIn = () => {\n    auth\n      .signInWithPopup(provider)\n      .then((result) => {\n        const newUser = {\n          name: result.user.displayName,\n          photo: result.user.photoURL,\n        };\n        localStorage.setItem(\"user\", JSON.stringify(newUser));\n        props.setUser(newUser);\n      })\n      .catch((error) => {\n        alert(error.message);\n      });\n  };\n\n  return (\n    <Container>\n      <Content>\n        {/* <SlackImg src=\"http://assets.stickpng.com/images/5cb480cd5f1b6d3fbadece79.png\" /> */}\n        {/* <SlackImg src=\"https://miro.medium.com/max/1084/1*L8UwJymGdpTh-jSXhDZO6g.png\" /> */}\n        <SlackImg src=\"https://i.imgur.com/J3X1vgQ.png\" />\n        <h1>Sign in Slack</h1>\n        <SignInButton onClick={() => signIn()}>\n          Sign In With Google\n        </SignInButton>\n      </Content>\n    </Container>\n  );\n}\n\nexport default Login;\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100vh;\n  background-color: #f8f8f8;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Content = styled.div`\n  background: white;\n  padding: 100px;\n  border-radius: 5px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  box-shadow: 0 1px 3px rgb(0 0 0 / 12%), 0 1px 2px rgb(0 0 0 / 24%);\n`;\n\nconst SlackImg = styled.img`\n  height: 100px;\n`;\n\nconst SignInButton = styled.button`\n  margin-top: 50px;\n  background-color: #0a8d48;\n  color: white;\n  border: none;\n  height: 40px;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 15px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport AccessTimeIcon from \"@material-ui/icons/AccessTime\";\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\";\n\nfunction Header({ user, signOut }) {\n  return (\n    <Container>\n      <Main>\n        <AccessTimeIcon />\n        <SearchContainer>\n          <Search>\n            <input type=\"text\" placeholder=\"Search...\" />\n          </Search>\n        </SearchContainer>\n        <HelpOutlineIcon />\n      </Main>\n      <UserContainer>\n        <Name>{user.name}</Name>\n        <UserImage onClick={signOut}>\n          <img\n            src={user.photo ? user.photo : \"https://i.imgur.com/6VBx3io.png\"}\n            alt=\"userphoto\"\n          />\n        </UserImage>\n      </UserContainer>\n    </Container>\n  );\n}\n\nexport default Header;\n\nconst Container = styled.div`\n  background: #350d36;\n  color: white;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  box-shadow: 0 1px 0 0 rgb(255 255 255 / 10%);\n`;\n\nconst Main = styled.div`\n    display: flex;\n    margin-right: 16px;\n    margin-left 16px;\n`;\n\nconst SearchContainer = styled.div`\n  min-width: 400px;\n  margin-left: 16px;\n  margin-right: 16px;\n`;\n\nconst Search = styled.div`\n  box-shadow: inset 0 0 0 1px rgb(104 74 104);\n  width: 100%;\n  border-radius: 6px;\n  display: flex;\n  align-items: center;\n\n  input {\n    background-color: transparent;\n    border: none;\n    padding-left: 8px;\n    padding-right: 8px;\n    color: white;\n    padding-top: 4px;\n    padding-bottom: 4px;\n  }\n\n  input:focus {\n    outline: none;\n  }\n`;\n\nconst UserContainer = styled.div`\n  display: flex;\n  align-items: center;\n  padding-right: 16px;\n  position: absolute;\n  right: 0;\n`;\n\nconst Name = styled.div`\n  padding-right: 16px;\n`;\n\nconst UserImage = styled.div`\n  width: 28px;\n  height: 28px;\n  border: 2px solid white;\n  border-radius: 3px;\n  cursor: pointer;\n\n  img {\n    width: 100%;\n  }\n`;\n","import MessageIcon from '@material-ui/icons/Message';\nimport InboxIcon from '@material-ui/icons/Inbox';\nimport DraftsIcon from '@material-ui/icons/Drafts';\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\nimport PeopleIcon from '@material-ui/icons/People';\nimport AppsIcon from '@material-ui/icons/Apps';\n\nexport const sidebarItemsData = [\n    {\n        icon: <MessageIcon />,\n        text: \"Thread\"\n    },\n    {\n        icon: <InboxIcon />,\n        text: \"All DMs\"\n    },\n    {\n        icon: <DraftsIcon />,\n        text: \"Mentions & Reactions\"\n    },\n    {\n        icon: <BookmarkBorderIcon />,\n        text: \"Save Items\"\n    },\n    {\n        icon: <PeopleIcon />,\n        text: \"Peoples & Groups\"\n    },\n    {\n        icon: <AppsIcon />,\n        text: \"More\"\n    }\n]","import React from 'react'\nimport styled from 'styled-components'\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport { sidebarItemsData } from '../data/SidebarData'\nimport AddIcon from '@material-ui/icons/Add';\nimport db from '../firebase'\nimport { useHistory } from 'react-router-dom'\n\nfunction Sidebar(props) {\n\n    const history = useHistory();\n\n\n    const goToChannel = (id) => {\n        if(id){\n            console.log(id);\n            history.push(`/room/${id}`)\n        }\n    }\n\n\n    const addChannel = () => {\n        const promptName = prompt(\"Enter channel name\");\n        if(promptName){\n            db.collection('rooms').add({\n                name: promptName\n            })\n        }\n    }\n\n    return (\n        <Container>\n            <WorkspaceContainer>\n                <Name>\n                    CleverProgrammer\n                </Name>\n                <NewMessage>\n                    <AddCircleOutlineIcon />\n                </NewMessage>\n            </WorkspaceContainer>\n            <MainChannels>\n                {\n                    sidebarItemsData.map(item => (\n                        <MainChannelItem>\n                            {item.icon}\n                            {item.text}\n                        </MainChannelItem>\n                    ))\n                }\n            </MainChannels>\n            <ChannelsContainer>\n                <NewChannelContainer>\n                    <div>\n                        Channels\n                    </div>\n                    <AddIcon onClick={addChannel} />\n                </NewChannelContainer>\n                <ChannelsList>\n                    {\n                        props.rooms.map(item => (\n                            <Channel onClick={()=>goToChannel(item.id)}>\n                                # {item.name}\n                            </Channel>\n                        ))\n                    }\n                </ChannelsList>\n            </ChannelsContainer>\n            \n        </Container>\n    )\n}\n\nexport default Sidebar\n\n\nconst Container = styled.div`\n    background: #3F0E40;\n\n`\n\nconst WorkspaceContainer = styled.div`\n    color: white;\n    height: 64px;\n    display: flex;\n    align-items: center;\n    padding-left: 19px;\n    justify-content: space-between;\n    border-bottom: 1px solid  #532753;\n`\n\nconst Name = styled.div``\n\nconst NewMessage = styled.div`\n    width: 36px;\n    height: 36px;\n    background: white;\n    color: #3F0E40;\n    fill: #3F0E40;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 50%;\n    margin-right: 20px;\n    cursor: pointer;\n`\n\nconst MainChannels = styled.div`\n    padding-top: 20px;\n`\n\nconst MainChannelItem = styled.div`\n    color: rgb(188,171,188);\n    display: grid;\n    grid-template-columns: 15% auto;\n    height: 28px;\n    align-items: center;\n    padding-left: 19px;\n    cursor: pointer;\n    :hover {\n        background: #350D36;\n    }\n`\n\nconst ChannelsContainer = styled.div`\n    color: rgb(188,171,188);\n    margin-top: 10px;\n`\n\nconst NewChannelContainer = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    height: 28px;\n    padding-left: 19px;\n    padding-right: 12px;\n`\n\nconst ChannelsList = styled.div``\n\nconst Channel = styled.div`\n    height: 28px;\n    display: flex;\n    align-items: center;\n    padding-left: 19px;\n    cursor: pointer;\n    :hover {\n        background: #350D36;\n    }\n`\n","import \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Chat from \"./components/Chat\";\nimport Login from \"./components/Login\";\nimport styled from \"styled-components\";\nimport Header from \"./components/Header\";\nimport Sidebar from \"./components/Sidebar\";\nimport db from \"./firebase\";\nimport { auth } from \"./firebase\";\n\nfunction App() {\n  const [rooms, setRooms] = useState([]);\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem(\"user\")));\n\n  const getChannels = () => {\n    db.collection(\"rooms\").onSnapshot((snapshot) => {\n      setRooms(\n        snapshot.docs.map((doc) => {\n          return { id: doc.id, name: doc.data().name };\n        })\n      );\n    });\n  };\n\n  const signOut = () => {\n    auth.signOut().then(() => {\n      localStorage.removeItem(\"user\");\n      setUser(null);\n    });\n  };\n\n  useEffect(() => {\n    getChannels();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Router>\n        {!user ? (\n          <Login setUser={setUser} />\n        ) : (\n          <Container>\n            <Header signOut={signOut} user={user} />\n            <Main>\n              <Sidebar rooms={rooms} />\n              <Switch>\n                <Route path=\"/room/:channelId\">\n                  <Chat user={user} />\n                </Route>\n                <Route path=\"/\">Select or Create Channel</Route>\n              </Switch>\n            </Main>\n          </Container>\n        )}\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100vh;\n  display: grid;\n  grid-template-rows: 38px minmax(0, 1fr);\n`;\n\nconst Main = styled.div`\n  display: grid;\n  grid-template-columns: 260px auto;\n`;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}